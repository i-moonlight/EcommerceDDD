// <auto-generated />
using System;
using EcommerceDDD.Infrastructure.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EcommerceDDD.Infrastructure.Migrations
{
    [DbContext(typeof(EcommerceDDDContext))]
    partial class EcommerceDDDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EcommerceDDD.Domain.Core.Messaging.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StoredEvents","dbo");

                    b.HasDiscriminator();
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("WelcomeEmailWasSent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Customers","dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Payments.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ConfirmationEmailSent")
                        .HasColumnName("ConfirmationEmailSent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnName("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnName("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Payments","dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Products","dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Customers.Customer", b =>
                {
                    b.OwnsMany("EcommerceDDD.Domain.Customers.Orders.Order", "Orders", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("ChangedAt")
                                .HasColumnName("ChangeDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnName("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("IsCancelled")
                                .HasColumnName("IsCancelled")
                                .HasColumnType("bit");

                            b1.Property<byte>("Status")
                                .HasColumnName("StatusId")
                                .HasColumnType("tinyint");

                            b1.HasKey("Id");

                            b1.HasIndex("CustomerId");

                            b1.ToTable("Orders","dbo");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsMany("EcommerceDDD.Domain.Customers.Orders.OrderLine", "OrderLines", b2 =>
                                {
                                    b2.Property<Guid>("OrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ProductId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Quantity")
                                        .HasColumnType("int");

                                    b2.HasKey("OrderId", "ProductId");

                                    b2.ToTable("OrderLines","dbo");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderId");

                                    b2.OwnsOne("EcommerceDDD.Domain.Shared.Money", "ProductBasePrice", b3 =>
                                        {
                                            b3.Property<Guid>("OrderLineOrderId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<Guid>("OrderLineProductId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<decimal>("Value")
                                                .HasColumnName("BasePrice")
                                                .HasColumnType("decimal(5,2)");

                                            b3.HasKey("OrderLineOrderId", "OrderLineProductId");

                                            b3.ToTable("OrderLines");

                                            b3.WithOwner()
                                                .HasForeignKey("OrderLineOrderId", "OrderLineProductId");

                                            b3.OwnsOne("EcommerceDDD.Domain.Shared.Currency", "Currency", b4 =>
                                                {
                                                    b4.Property<Guid>("MoneyOrderLineOrderId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<Guid>("MoneyOrderLineProductId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<string>("Name")
                                                        .HasColumnName("BaseCurrency")
                                                        .HasColumnType("nvarchar(5)")
                                                        .HasMaxLength(5);

                                                    b4.HasKey("MoneyOrderLineOrderId", "MoneyOrderLineProductId");

                                                    b4.ToTable("OrderLines");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MoneyOrderLineOrderId", "MoneyOrderLineProductId");
                                                });
                                        });

                                    b2.OwnsOne("EcommerceDDD.Domain.Shared.Money", "ProductExchangePrice", b3 =>
                                        {
                                            b3.Property<Guid>("OrderLineOrderId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<Guid>("OrderLineProductId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<decimal>("Value")
                                                .HasColumnName("ExchangePrice")
                                                .HasColumnType("decimal(5,2)");

                                            b3.HasKey("OrderLineOrderId", "OrderLineProductId");

                                            b3.ToTable("OrderLines");

                                            b3.WithOwner()
                                                .HasForeignKey("OrderLineOrderId", "OrderLineProductId");

                                            b3.OwnsOne("EcommerceDDD.Domain.Shared.Currency", "Currency", b4 =>
                                                {
                                                    b4.Property<Guid>("MoneyOrderLineOrderId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<Guid>("MoneyOrderLineProductId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<string>("Name")
                                                        .HasColumnName("ExchangeCurrency")
                                                        .HasColumnType("nvarchar(5)")
                                                        .HasMaxLength(5);

                                                    b4.HasKey("MoneyOrderLineOrderId", "MoneyOrderLineProductId");

                                                    b4.ToTable("OrderLines");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MoneyOrderLineOrderId", "MoneyOrderLineProductId");
                                                });
                                        });
                                });

                            b1.OwnsOne("EcommerceDDD.Domain.Shared.Money", "TotalPrice", b2 =>
                                {
                                    b2.Property<Guid>("OrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Value")
                                        .HasColumnName("TotalPrice")
                                        .HasColumnType("decimal(5,2)");

                                    b2.HasKey("OrderId");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderId");

                                    b2.OwnsOne("EcommerceDDD.Domain.Shared.Currency", "Currency", b3 =>
                                        {
                                            b3.Property<Guid>("MoneyOrderId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasColumnName("Currency")
                                                .HasColumnType("nvarchar(5)")
                                                .HasMaxLength(5);

                                            b3.HasKey("MoneyOrderId");

                                            b3.ToTable("Orders");

                                            b3.WithOwner()
                                                .HasForeignKey("MoneyOrderId");
                                        });
                                });
                        });
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Products.Product", b =>
                {
                    b.OwnsOne("EcommerceDDD.Domain.Shared.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnName("Price")
                                .HasColumnType("decimal(5,2)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.OwnsOne("EcommerceDDD.Domain.Shared.Currency", "Currency", b2 =>
                                {
                                    b2.Property<Guid>("MoneyProductId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnName("Currency")
                                        .HasColumnType("nvarchar(5)")
                                        .HasMaxLength(5);

                                    b2.Property<string>("Symbol")
                                        .IsRequired()
                                        .HasColumnName("CurrencySymbol")
                                        .HasColumnType("nvarchar(5)")
                                        .HasMaxLength(5);

                                    b2.HasKey("MoneyProductId");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("MoneyProductId");
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
