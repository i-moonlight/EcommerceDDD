// <auto-generated />
using System;
using EcommerceDDD.Infrastructure.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EcommerceDDD.Infrastructure.Database.Migrations
{
    [DbContext(typeof(EcommerceDDDContext))]
    partial class EcommerceDDDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EcommerceDDD.Domain.Carts.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts", "dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Core.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StoredEvents", "dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Customers", "dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Payments.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("PaidAt");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("StatusId");

                    b.HasKey("Id");

                    b.ToTable("Payments", "dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Products", "dbo");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Carts.Cart", b =>
                {
                    b.OwnsMany("EcommerceDDD.Domain.Carts.CartItem", "Items", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("CartId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("CartId");

                            b1.ToTable("CartItems", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("CartId");
                        });

                    b.Navigation("Items");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Customers.Customer", b =>
                {
                    b.OwnsMany("EcommerceDDD.Domain.Customers.Orders.Order", "Orders", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("CreatedAt");

                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Status")
                                .HasColumnType("tinyint")
                                .HasColumnName("StatusId");

                            b1.HasKey("Id");

                            b1.HasIndex("CustomerId");

                            b1.ToTable("Orders", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsMany("EcommerceDDD.Domain.Customers.Orders.OrderLine", "OrderLines", b2 =>
                                {
                                    b2.Property<Guid>("OrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ProductId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Quantity")
                                        .HasColumnType("int");

                                    b2.HasKey("OrderId", "ProductId");

                                    b2.ToTable("OrderLines", "dbo");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderId");

                                    b2.OwnsOne("EcommerceDDD.Domain.SharedKernel.Money", "ProductBasePrice", b3 =>
                                        {
                                            b3.Property<Guid>("OrderLineOrderId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<Guid>("OrderLineProductId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("CurrencyCode")
                                                .HasMaxLength(5)
                                                .HasColumnType("nvarchar(5)")
                                                .HasColumnName("BaseCurrency");

                                            b3.Property<decimal>("Value")
                                                .HasColumnType("decimal(5,2)")
                                                .HasColumnName("BasePrice");

                                            b3.HasKey("OrderLineOrderId", "OrderLineProductId");

                                            b3.ToTable("OrderLines");

                                            b3.WithOwner()
                                                .HasForeignKey("OrderLineOrderId", "OrderLineProductId");
                                        });

                                    b2.OwnsOne("EcommerceDDD.Domain.SharedKernel.Money", "ProductExchangePrice", b3 =>
                                        {
                                            b3.Property<Guid>("OrderLineOrderId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<Guid>("OrderLineProductId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("CurrencyCode")
                                                .HasMaxLength(5)
                                                .HasColumnType("nvarchar(5)")
                                                .HasColumnName("ExchangeCurrency");

                                            b3.Property<decimal>("Value")
                                                .HasColumnType("decimal(5,2)")
                                                .HasColumnName("ExchangePrice");

                                            b3.HasKey("OrderLineOrderId", "OrderLineProductId");

                                            b3.ToTable("OrderLines");

                                            b3.WithOwner()
                                                .HasForeignKey("OrderLineOrderId", "OrderLineProductId");
                                        });

                                    b2.Navigation("ProductBasePrice");

                                    b2.Navigation("ProductExchangePrice");
                                });

                            b1.OwnsOne("EcommerceDDD.Domain.SharedKernel.Money", "TotalPrice", b2 =>
                                {
                                    b2.Property<Guid>("OrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CurrencyCode")
                                        .HasMaxLength(5)
                                        .HasColumnType("nvarchar(5)")
                                        .HasColumnName("Currency");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("decimal(5,2)")
                                        .HasColumnName("TotalPrice");

                                    b2.HasKey("OrderId");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderId");
                                });

                            b1.Navigation("OrderLines");

                            b1.Navigation("TotalPrice");
                        });

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EcommerceDDD.Domain.Products.Product", b =>
                {
                    b.OwnsOne("EcommerceDDD.Domain.SharedKernel.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CurrencyCode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("Currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("Price");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
